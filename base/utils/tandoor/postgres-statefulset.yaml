---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: tandoor
    tier: database
  name: tandoor-postgresql
  namespace: utils
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tandoor
      tier: database
  serviceName: tandoor-postgresql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tandoor
        tier: database
      name: tandoor-postgresql
    spec:
      containers:
        - name: postgresql
          env:
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_USER
              value: tandoor
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tandoor-credentials
                  key: postgresql-password
            # Optional PG admin pass - bitnami might need it for init logic even if creating another user
            - name: POSTGRESQL_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tandoor-credentials
                  key: postgresql-postgres-password
            - name: POSTGRES_DB
              value: tandoor
            # Disable features that might cause permission issues on simple volumes
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          image: docker.io/bitnami/postgresql:11.5.0-debian-9-r60
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready -U tandoor -d tandoor -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 45 # Give more time for init + startup
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - containerPort: 5432
              name: postgresql
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - -e
                - pg_isready -U tandoor -d tandoor -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 20 # Quicker readiness check
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: data
              subPath: tandoor/postgresql
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sh
            - -c
            - |
              mkdir -p /bitnami/postgresql/data
              chown -R 1001:1001 /bitnami/postgresql
              chmod 700 /bitnami/postgresql/data
              echo "Permissions set for /bitnami/postgresql"
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          name: init-chmod-data
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: data
              subPath: tandoor/postgresql
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
      serviceAccount: recipes
      serviceAccountName: recipes
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: utils-pvc
