---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recipes
  labels:
    app: recipes
    environment: production
    tier: frontend
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: recipes
      environment: production
      tier: frontend
  template:
    metadata:
      labels:
        app: recipes
        tier: frontend
        environment: production
    spec:
      serviceAccountName: recipes
      restartPolicy: Always
      securityContext:
        fsGroup: 65534
      volumes:
        - name: tandoor-data-volume
          persistentVolumeClaim:
            claimName: tandoor-data-pvc
        - name: nginx-config-volume
          configMap:
            name: tandoor-nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-logs
          emptyDir: {}
      initContainers:
        - name: init-db-migrate-static
          image: vabene1111/recipes
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: tandoor-credentials
                  key: secret-key
            - name: DB_ENGINE
              value: django.db.backends.postgresql
            - name: POSTGRES_HOST
              value: recipes-postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: recipes
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tandoor-credentials
                  key: postgresql-password
            - name: REDIS_PORT
              value: "6379"
          command:
            - sh
            - -c
            - |
              set -e
              echo "Waiting for database..."
              timeout 90 sh -c 'until pg_isready -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" -d "$POSTGRES_DB"; do echo "DB not ready, sleeping..."; sleep 3; done'

              # Ensure directories exist before chown/chmod
              mkdir -p /opt/recipes/mediafiles /opt/recipes/staticfiles

              source venv/bin/activate
              echo "Running DB migrations..."
              python manage.py migrate --noinput
              echo "Collecting static files..."
              python manage.py collectstatic_js_reverse
              python manage.py collectstatic --noinput
              echo "Setting media file permissions..."
              chown -R 65534:65534 /opt/recipes/mediafiles
              find /opt/recipes/mediafiles -type d -print0 | xargs -0 -r chmod 755
              find /opt/recipes/mediafiles -type f -print0 | xargs -0 -r chmod 644

              # Add chown for staticfiles to fix permission error
              echo "Setting static file permissions..."
              chown -R 65534:65534 /opt/recipes/staticfiles
              # Optionally set read-only permissions if desired after chown
              # find /opt/recipes/staticfiles -type d -print0 | xargs -0 -r chmod 755
              # find /opt/recipes/staticfiles -type f -print0 | xargs -0 -r chmod 644

              echo "Init container finished."
          resources:
            requests:
              cpu: 150m
              memory: 128Mi
          volumeMounts:
            - name: tandoor-data-volume
              mountPath: /opt/recipes/appdata
      containers:
        - name: tandoor-nginx
          image: nginx:1.27-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: tandoor-data-volume
              mountPath: /media
              subPath: mediafiles
              readOnly: true
            - name: tandoor-data-volume
              mountPath: /static
              readOnly: true
              subPath: staticfiles
            - name: nginx-logs
              mountPath: /var/log/nginx
        - name: tandoor-app
          image: vabene1111/recipes
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 65534
          command:
            - /opt/recipes/venv/bin/gunicorn
            - --bind
            - 0.0.0.0:8080
            - --workers
            - "3"
            - --log-level
            - INFO
            - --access-logfile
            - "-"
            - --error-logfile
            - "-"
            - recipes.wsgi:application
          ports:
            - containerPort: 8080
              name: gunicorn
              protocol: TCP
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: tandoor-credentials
                  key: secret-key
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tandoor-credentials
                  key: postgresql-postgres-password
            - name: DB_ENGINE
              value: django.db.backends.postgresql
            - name: POSTGRES_HOST
              value: recipes-postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: recipes
            - name: POSTGRES_DB
              value: recipes
            - name: DEBUG
              value: "0"
            - name: ALLOWED_HOSTS
              value: "*"
            - name: GUNICORN_MEDIA
              value: "0"
            - name: TZ
              value: "CET"
            - name: USE_X_FORWARDED_HOST
              value: "True"
            - name: SECURE_PROXY_SSL_HEADER
              value: "HTTP_X_FORWARDED_PROTO,https"
            - name: REDIS_PORT
              value: "6379"
          livenessProbe:
            httpGet:
              path: /
              port: gunicorn
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: gunicorn
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 150m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: tandoor-data-volume
              mountPath: /opt/recipes/mediafiles
              subPath: mediafiles
            - name: tandoor-data-volume
              mountPath: /opt/recipes/staticfiles
              subPath: staticfiles
              readOnly: true
