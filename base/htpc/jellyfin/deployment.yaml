# File: base/htpc/jellyfin/deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: jellyfin
  name: jellyfin
spec:
  selector:
    matchLabels:
      run: jellyfin
  template:
    metadata:
      labels:
        run: jellyfin
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8096"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        supplementalGroups:
          - 992
      initContainers:
        - name: init-jellyfin-config
          image: alpine:latest
          command: ["sh", "-c"]
          args:
            - |
              apk add --no-cache xmlstarlet
              CONFIG_FILE="/config/system.xml"
              if [ -f "$CONFIG_FILE" ]; then
                # Ensure EnableMetrics exists and is true
                if xmlstarlet sel -t -c "boolean(/ServerConfiguration/EnableMetrics)" "$CONFIG_FILE"; then
                  xmlstarlet ed --inplace -u "/ServerConfiguration/EnableMetrics" -v "true" "$CONFIG_FILE"
                else
                  xmlstarlet ed --inplace -s "/ServerConfiguration" -t elem -n "EnableMetrics" -v "true" "$CONFIG_FILE"
                fi
              fi
          volumeMounts:
            - name: arr-stack-storage
              mountPath: /config
              subPath: jellyfin/config
      containers:
        - name: jellyfin
          image: jellyfin/jellyfin:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "CET"
          securityContext:
            privileged: true
          ports:
            - containerPort: 8096
              protocol: TCP
              name: http
            - containerPort: 8920
              protocol: TCP
            - containerPort: 7359
              protocol: UDP
            - containerPort: 1900
              protocol: UDP
          volumeMounts:
            - name: arr-stack-storage
              mountPath: /config
              subPath: jellyfin/config
            - name: arr-stack-storage
              mountPath: /data/media
              subPath: data/media
            - name: "render-device"
              mountPath: "/dev/dri/renderD128"
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: arr-stack-storage
          persistentVolumeClaim:
            claimName: htpc-pvc
        - name: "render-device"
          hostPath:
            path: "/dev/dri/renderD128"
