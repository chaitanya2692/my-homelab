# This is an auto-generated file. DO NOT EDIT
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: htpc
  name: htpc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: bazarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 6767
    protocol: TCP
    targetPort: 6767
  selector:
    app: htpc
    run: bazarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: jackett
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 9117
    protocol: TCP
    targetPort: 9117
  selector:
    app: htpc
    run: jackett
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: radarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 7878
    protocol: TCP
    targetPort: 7878
  selector:
    app: htpc
    run: radarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: sonarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 8989
    protocol: TCP
    targetPort: 8989
  selector:
    app: htpc
    run: sonarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: transmission
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app: htpc
    run: transmission
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
spec:
  ports:
  - name: webui
    port: 8096
    protocol: TCP
    targetPort: 8096
  selector:
    run: jellyfin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: bazarr
  name: bazarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: bazarr
  template:
    metadata:
      labels:
        app: htpc
        run: bazarr
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/bazarr:latest
        name: bazarr
        ports:
        - containerPort: 6767
          name: webui
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: bazarr
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
      initContainers:
      - command:
        - sh
        - -c
        - until wget -qO- sonarr:8989/sonarr &> /dev/null && wget -qO- radarr:7878/radarr
          &> /dev/null; do echo waiting for sonarr and radarr; sleep 2; done;
        image: busybox
        name: wait-for-sonarr-and-radarr
      - command:
        - sh
        - -c
        - |
          mkdir -p /htpc/bazarr/config
          export RADARR_API_KEY=$(cat /htpc/radarr/config.xml | sed -ne "/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}")
          export SONARR_API_KEY=$(cat /htpc/sonarr/config.xml | sed -ne "/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}")
          cat << EOF > /htpc/bazarr/config/config.ini
          [sonarr]
          apikey = ${SONARR_API_KEY}
          full_update = Daily
          ip = sonarr
          only_monitored = False
          base_url = /sonarr
          ssl = False
          port = 8989

          [radarr]
          apikey = ${RADARR_API_KEY}
          full_update = Daily
          ip = radarr
          only_monitored = False
          base_url = /radarr
          ssl = False
          port = 7878

          [general]
          movie_default_hi = False
          movie_default_language = []
          ip = 0.0.0.0
          use_scenename = True
          use_postprocessing = False
          enabled_providers = subscene,tvsubtitles
          auto_update = True
          port = 6767
          use_radarr = True
          base_url = /bazarr/
          page_size = 25
          minimum_score_movie = 70
          branch = master
          single_language = False
          use_sonarr = True
          serie_default_hi = False
          path_mappings_movie = [['/movies', '/movies'], ['', ''], ['', ''], ['', ''], ['', '']]
          serie_default_enabled = False
          movie_default_enabled = False
          serie_default_language = []
          path_mappings = [['/tv', '/tv'], ['', ''], ['', ''], ['', ''], ['', '']]
          postprocessing_cmd =
          minimum_score = 90
          debug = False
          use_embedded_subs = True
          adaptive_searching = False
          EOF
        image: busybox
        name: config
        volumeMounts:
        - mountPath: /htpc
          name: htpc-home
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: jackett
  name: jackett
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: jackett
  template:
    metadata:
      labels:
        app: htpc
        run: jackett
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/jackett:latest
        name: jackett
        ports:
        - containerPort: 9117
          name: webui
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jackett
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
      initContainers:
      - args:
        - 'echo start; [[ ! -f /config/Jackett/ServerConfig.json ]] && mkdir -p /config/Jackett/
          &&  echo ''{ "BasePathOverride": "/jackett"}'' > /config/Jackett/ServerConfig.json;
          echo end;'
        command:
        - sh
        - -c
        image: busybox
        name: config
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jackett
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: radarr
  name: radarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: radarr
  template:
    metadata:
      labels:
        app: htpc
        run: radarr
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/radarr:latest
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:7878/radarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}'
              </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: radarr
        ports:
        - containerPort: 7878
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:7878/radarr/api/system/status?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config && chown -R 1000:1000 /movies
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
        - mountPath: /movies
          name: htpc-home
          subPath: media/movies
      - args:
        - echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/radarr</UrlBase></Config>'>
          /config/config.xml;echo end;
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: sonarr
  name: sonarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: sonarr
  template:
    metadata:
      labels:
        app: htpc
        run: sonarr
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/sonarr:latest
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:8989/sonarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}'
              </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: sonarr
        ports:
        - containerPort: 8989
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:8989/sonarr/api/system/status?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config && chown -R 1000:1000 /tv
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
        - mountPath: /tv
          name: htpc-home
          subPath: media/tv
      - args:
        - echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/sonarr</UrlBase></Config>'>
          /config/config.xml;echo end;
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: transmission
  name: transmission
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: transmission
  template:
    metadata:
      labels:
        app: htpc
        run: transmission
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: WHITELIST
          value: ""
        - name: HOST_WHITELIST
          value: ""
        image: linuxserver/transmission:latest
        name: transmission
        ports:
        - containerPort: 9091
          name: webui
          protocol: TCP
        - containerPort: 51413
          name: torrent-tcp
          protocol: TCP
        - containerPort: 51413
          name: torrent-udp
          protocol: UDP
        resources: {}
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: transmission
        - mountPath: /downloads
          name: htpc-home
          subPath: downloads
        - mountPath: /watch
          name: htpc-home
          subPath: watch
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  selector:
    matchLabels:
      run: jellyfin
  template:
    metadata:
      labels:
        run: jellyfin
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/jellyfin:latest
        imagePullPolicy: IfNotPresent
        name: jellyfin
        ports:
        - containerPort: 8096
          protocol: TCP
        - containerPort: 7359
          protocol: UDP
        - containerPort: 1900
          protocol: UDP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jellyfin
        - mountPath: /tv
          name: htpc-home
          readOnly: true
          subPath: media/tv
        - mountPath: /movies
          name: htpc-home
          readOnly: true
          subPath: media/movies
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: htpc
  name: htpc
  namespace: htpc
spec:
  entryPoints: []
  routes:
  - kind: Rule
    match: PathPrefix(`/jackett`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: jackett
      namespace: htpc
      port: 9117
  - kind: Rule
    match: PathPrefix(`/sonarr`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: sonarr
      namespace: htpc
      port: 8989
  - kind: Rule
    match: PathPrefix(`/radarr`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: radarr
      namespace: htpc
      port: 7878
  - kind: Rule
    match: PathPrefix(`/bazarr`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: bazarr
      namespace: htpc
      port: 6767
  - kind: Rule
    match: PathPrefix(`/transmission`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: transmission
      namespace: htpc
      port: 9091
